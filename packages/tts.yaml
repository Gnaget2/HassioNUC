##################################################################################################
# TTS package                                                                                    #
# Version 1.0.  last changed 2019-12-31                                                          #
# Created for and tested with Home Assistant Hassio version 0.103.5                              #
# Creator Mikael Danell SHG                                                                      #
##################################################################################################

# Bolean section
input_boolean:
  liamsrum:
    name: Liams rum
    initial: on
    icon: mdi:check-outline
  mirandasrum:
    name: Mirandas rum
    initial: on
    icon: mdi:check-outline
  vardagsrum:
    name: Vardsgrummet
    icon: mdi:check-outline
  allrum:
    name: allrum
    initial: on
    icon: mdi:check-outline
  sovrum:
    name: Sovrum
    initial: on
    icon: mdi:check-outline

# input section
input_text:
  tts1:
    name: TTS 1
    icon: mdi:cast-audio
  tts2:
    name: TTS 2
    icon: mdi:cast-audio
  tts3:
    name: TTS 3
    icon: mdi:cast-audio
  tts4:
    name: TTS 4
    icon: mdi:cast-audio

input_number:
  tts_volum:
    name: Volym
    icon: mdi:volume-high
    min: 10
    max: 100
    step: 10
    unit_of_measurement: '%'

# Script section
script:
# turns on the heater and activates the trigger that will turn it off
  tts1_on:
    sequence:
    - service: sonos.snapshot
      data:
        entity_id: media_player.home
    - delay: '00:00:01'
    - service: media_player.volume_set
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        volume_level: '{{ (states.input_number.tts_volum.state | float / 100) | round(1) }}'
    - service: tts.google_say
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        message: >-
         {{states.input_text.tts1.state}} 
    - delay: '00:00:07'
    - service: sonos.restore
      data:
        entity_id: media_player.home

  tts2_on:
    sequence:
    - service: sonos.snapshot
      data:
        entity_id: media_player.home
    - delay: '00:00:01'
    - service: media_player.volume_set
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        volume_level: '{{ (states.input_number.tts_volum.state | float / 100) | round(1) }}'
    - service: tts.google_say
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        message: >-
         {{states.input_text.tts2.state}} 
    - delay: '00:00:07'
    - service: sonos.restore
      data:
        entity_id: media_player.home 

  tts3_on:
    sequence:
    - service: sonos.snapshot
      data:
        entity_id: media_player.home
    - delay: '00:00:01'
    - service: media_player.volume_set
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        volume_level: '{{ (states.input_number.tts_volum.state | float / 100) | round(1) }}'
    - service: tts.google_say
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        message: >-
         {{states.input_text.tts3.state}} 
    - delay: '00:00:07'
    - service: sonos.restore
      data:
        entity_id: media_player.home 

  tts4_on:
    sequence:
    - service: sonos.snapshot
      data:
        entity_id: media_player.home
    - delay: '00:00:01'
    - service: media_player.volume_set
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        volume_level: '{{ (states.input_number.tts_volum.state | float / 100) | round(1) }}'
    - service: tts.google_say
      data_template:
        entity_id: >-
         {{states.sensor.ttsplayers.state}}
        message: >-
         {{states.input_text.tts4.state}} 
    - delay: '00:00:07'
    - service: sonos.restore
      data:
        entity_id: media_player.home


# Sensor section
sensor:
  - platform: template
    sensors:
      ttsplayers:
        friendly_name: 'TTS Players'
        value_template: >-
          {% if is_state("input_boolean.liamsrum", "on") and is_state("input_boolean.mirandasrum", "on") and is_state("input_boolean.vardagsrum", "on") %}
            media_player.liam, media_player.miranda, media_player.home
          {% else %}
          {% if is_state("input_boolean.liamsrum", "off") and is_state("input_boolean.mirandasrum", "on") and is_state("input_boolean.vardagsrum", "on") %}
            media_player.miranda, media_player.home
          {% else %}
          {% if is_state("input_boolean.liamsrum", "on") and is_state("input_boolean.mirandasrum", "off") and is_state("input_boolean.vardagsrum", "on") %}
            media_player.liam, media_player.home
          {% else %}
          {% if is_state("input_boolean.liamsrum", "on") and is_state("input_boolean.mirandasrum", "on") and is_state("input_boolean.vardagsrum", "off") %}
            media_player.liam, media_player.miranda
          {% else %}
          {% if is_state("input_boolean.liamsrum", "off") and is_state("input_boolean.mirandasrum", "off") and is_state("input_boolean.vardagsrum", "on") %}
            media_player.home
          {% else %}
          {% if is_state("input_boolean.liamsrum", "on") and is_state("input_boolean.mirandasrum", "off") and is_state("input_boolean.vardagsrum", "off") %}
            media_player.liam
          {% else %}
          {% if is_state("input_boolean.liamsrum", "off") and is_state("input_boolean.mirandasrum", "on") and is_state("input_boolean.vardagsrum", "off") %}
            media_player.miranda
          {% endif %}
          {% endif %}
          {% endif %}
          {% endif %}
          {% endif %}
          {% endif %}
          {% endif %}

             

